.release-job: &release-job
  stage: release
  image: registry.gitlab.com/thelabnyc/python:py311
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED

build-pkg:
  <<: *release-job
  script:
    - poetry build
  artifacts:
    paths:
      - dist/

publish-job:
  <<: *release-job
  needs:
    - job: build-pkg
      artifacts: true
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi
  environment:
    name: release
    deployment_tier: production
  script:
    # Install dependencies
    - apt update && apt install -y jq
    - python -m pip install -U twine id

    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI
    # API token
    - oidc_token=$(python -m id -v PYPI)
    - resp=$(curl -s -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - jq <<< "${resp}"
    - api_token=$(jq --raw-output '.token' <<< "${resp}")

    # Publish to PyPI
    - export TWINE_USERNAME=__token__
    - export TWINE_PASSWORD=${api_token}
    - python -m twine upload
        dist/*

    # Publish to Gitlab
    - export TWINE_USERNAME=gitlab-ci-token
    - export TWINE_PASSWORD=${CI_JOB_TOKEN}
    - python -m twine upload
        --repository-url "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"
        dist/*

publish-gitlab-release:
  <<: *release-job
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo 'release job'
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG. Tagged by $GITLAB_USER_LOGIN'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
